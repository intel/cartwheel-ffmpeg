From d7c29c50ccdc31f3790198624dcf94000bce7694 Mon Sep 17 00:00:00 2001
From: Fei Wang <fei.w.wang-at-intel.com@ffmpeg.org>
Date: Fri, 29 Apr 2022 15:59:38 +0800
Subject: [PATCH 62/77] lavu: add sub frame side data

Sub frame side data allows attach another AVFrame as side data into
the target AVFrame.

Note: remove version bump in libavutil/version.h compare to version
submitted to community:

https://patchwork.ffmpeg.org/project/ffmpeg/list/?series=6504

Signed-off-by: Fei Wang <fei.w.wang@intel.com>
---
 libavutil/Makefile             |  2 ++
 libavutil/frame.c              |  5 ++-
 libavutil/frame.h              |  5 +++
 libavutil/sub_frame_metadata.c | 61 ++++++++++++++++++++++++++++++++++
 libavutil/sub_frame_metadata.h | 35 +++++++++++++++++++
 5 files changed, 107 insertions(+), 1 deletion(-)
 create mode 100644 libavutil/sub_frame_metadata.c
 create mode 100644 libavutil/sub_frame_metadata.h

diff --git a/libavutil/Makefile b/libavutil/Makefile
index 29b06665f502..0e01c1c2164d 100644
--- a/libavutil/Makefile
+++ b/libavutil/Makefile
@@ -91,6 +91,7 @@ HEADERS = adler32.h                                                     \
           tea.h                                                         \
           tx.h                                                          \
           film_grain_params.h                                           \
+          sub_frame_metadata.h                                          \
 
 ARCH_HEADERS = bswap.h                                                  \
                intmath.h                                                \
@@ -183,6 +184,7 @@ OBJS = adler32.o                                                        \
        version.o                                                        \
        video_enc_params.o                                               \
        film_grain_params.o                                              \
+       sub_frame_metadata.o                                             \
 
 
 OBJS-$(CONFIG_CUDA)                     += hwcontext_cuda.o
diff --git a/libavutil/frame.c b/libavutil/frame.c
index fa9b11aa5430..2d2f5a7760f6 100644
--- a/libavutil/frame.c
+++ b/libavutil/frame.c
@@ -325,7 +325,9 @@ FF_ENABLE_DEPRECATION_WARNINGS
         if (   sd_src->type == AV_FRAME_DATA_PANSCAN
             && (src->width != dst->width || src->height != dst->height))
             continue;
-        if (force_copy) {
+        /* Don't copy sub frame side data, otherwise sub frame's pointers in
+         * dst may be invalid. */
+        if (force_copy && sd_src->type != AV_FRAME_DATA_SUB_FRAME) {
             sd_dst = av_frame_new_side_data(dst, sd_src->type,
                                             sd_src->size);
             if (!sd_dst) {
@@ -832,6 +834,7 @@ const char *av_frame_side_data_name(enum AVFrameSideDataType type)
     case AV_FRAME_DATA_DOVI_RPU_BUFFER:             return "Dolby Vision RPU Data";
     case AV_FRAME_DATA_DOVI_METADATA:               return "Dolby Vision Metadata";
     case AV_FRAME_DATA_AMBIENT_VIEWING_ENVIRONMENT: return "Ambient viewing environment";
+    case AV_FRAME_DATA_SUB_FRAME:                   return "Sub frame Metadata";
     }
     return NULL;
 }
diff --git a/libavutil/frame.h b/libavutil/frame.h
index bbe909ee2dad..f5bbad1655b6 100644
--- a/libavutil/frame.h
+++ b/libavutil/frame.h
@@ -214,6 +214,11 @@ enum AVFrameSideDataType {
      * Ambient viewing environment metadata, as defined by H.274.
      */
     AV_FRAME_DATA_AMBIENT_VIEWING_ENVIRONMENT,
+
+    /**
+     * Sub frame of a target frame, as described by AVFrame.
+     */
+    AV_FRAME_DATA_SUB_FRAME,
 };
 
 enum AVActiveFormatDescription {
diff --git a/libavutil/sub_frame_metadata.c b/libavutil/sub_frame_metadata.c
new file mode 100644
index 000000000000..82ea32383fa2
--- /dev/null
+++ b/libavutil/sub_frame_metadata.c
@@ -0,0 +1,61 @@
+/*
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#include "sub_frame_metadata.h"
+
+static void sub_frame_free(void *opaque, uint8_t *data)
+{
+    AVFrame *frame = (AVFrame*)data;
+
+    av_frame_free(&frame);
+}
+
+static AVFrame *sub_frame_alloc(size_t *out_size)
+{
+    AVFrame *sub_frame = av_frame_alloc();
+    if (!sub_frame)
+        return NULL;
+
+    *out_size = sizeof(*sub_frame);
+
+    return sub_frame;
+}
+
+AVFrame *av_sub_frame_create_side_data(AVFrame *frame)
+{
+    AVBufferRef *buf;
+    AVFrame *sub_frame;
+    size_t size;
+
+    sub_frame = sub_frame_alloc(&size);
+    if (!sub_frame)
+        return NULL;
+
+    buf = av_buffer_create((uint8_t *)sub_frame, size, &sub_frame_free, NULL, 0);
+    if (!buf) {
+        av_frame_free(&sub_frame);
+        return NULL;
+    }
+
+    if (!av_frame_new_side_data_from_buf(frame, AV_FRAME_DATA_SUB_FRAME, buf)) {
+        av_buffer_unref(&buf);
+        return NULL;
+    }
+
+    return sub_frame;
+}
diff --git a/libavutil/sub_frame_metadata.h b/libavutil/sub_frame_metadata.h
new file mode 100644
index 000000000000..621fb31e4226
--- /dev/null
+++ b/libavutil/sub_frame_metadata.h
@@ -0,0 +1,35 @@
+/*
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#ifndef AVUTIL_SUB_FRAME_METADATA_H
+#define AVUTIL_SUB_FRAME_METADATA_H
+
+#include "frame.h"
+
+/**
+ * Allocate a AVFrame structure and add it to the input frame as
+ * the side data. The allocated AVFrame will be freed automatically
+ * once the buf of created side data reference count decrease to zero.
+ *
+ * @param frame The frame which side data is added to.
+ *
+ * @return The AVFrame structure to be filled by caller.
+ */
+AVFrame *av_sub_frame_create_side_data(AVFrame *frame);
+
+#endif /* AVUTIL_SUB_FRAME_METADATA_H */
-- 
2.38.1

