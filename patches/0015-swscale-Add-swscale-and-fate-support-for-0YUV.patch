From 7a5a5d6d74160a0e268e1e8a52685ee5a1ff16c3 Mon Sep 17 00:00:00 2001
From: Linjie Fu <linjie.fu@intel.com>
Date: Mon, 15 Jun 2020 15:38:48 +0800
Subject: [PATCH 15/72] swscale: Add swscale and fate support for 0YUV

Add input and output support in swscale for 0YUV.

Since AV_PIX_FMT_0RGB would be treated as AV_PIX_FMT_ARGB, the
default X(0) channel for 0YUV is set to 0xFF as well.

Add fate test for 0YUV.

Signed-off-by: Linjie Fu <linjie.fu@intel.com>
---
 libswscale/swscale_unscaled.c | 40 +++++++++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)

diff --git a/libswscale/swscale_unscaled.c b/libswscale/swscale_unscaled.c
index 8838cc8b53..331d4f7ae7 100644
--- a/libswscale/swscale_unscaled.c
+++ b/libswscale/swscale_unscaled.c
@@ -371,6 +371,41 @@ static int yuv422pToUyvyWrapper(SwsContext *c, const uint8_t *src[],
     return srcSliceH;
 }
 
+static void yuv444pTovuya(const uint8_t *src[], int srcStride[],
+                          uint8_t *dst, int dstStride, int srcSliceH, int width)
+{
+    int x, h, i;
+    for (h = 0; h < srcSliceH; h++) {
+        uint8_t *dest = dst + dstStride * h;
+
+        for (x = 0; x < width; x++) {
+            *dest++ = src[2][x];
+            *dest++ = src[1][x];
+            *dest++ = src[0][x];
+            *dest++ = 0xFF;
+        }
+
+        for (i = 0; i < 3; i++)
+            src[i] += srcStride[i];
+    }
+}
+
+
+static int yuv444pTovuyaWrapper(SwsContext *c, const uint8_t *src[],
+                                int srcStride[], int srcSliceY, int srcSliceH,
+                                uint8_t *dstParam[], int dstStride[])
+{
+    uint8_t *dst = dstParam[0] + dstStride[0] * srcSliceY;
+
+    const uint8_t *source[] = { src[0], src[1], src[2] };
+    int stride[] = { srcStride[0], srcStride[1], srcStride[2] };
+
+    yuv444pTovuya(source, stride, dst, dstStride[0],
+                  srcSliceH, c->srcW);
+
+    return srcSliceH;
+}
+
 static int yuyvToYuv420Wrapper(SwsContext *c, const uint8_t *src[],
                                int srcStride[], int srcSliceY, int srcSliceH,
                                uint8_t *dstParam[], int dstStride[])
@@ -2172,6 +2207,11 @@ void ff_get_unscaled_swscale(SwsContext *c)
             c->convert_unscaled = yuv422pToUyvyWrapper;
     }
 
+    if (srcFormat == AV_PIX_FMT_YUV444P) {
+        if (dstFormat == AV_PIX_FMT_VUYA)
+            c->convert_unscaled = yuv444pTovuyaWrapper;
+    }
+
     /* uint Y to float Y */
     if (srcFormat == AV_PIX_FMT_GRAY8 && dstFormat == AV_PIX_FMT_GRAYF32){
         c->convert_unscaled = uint_y_to_float_y_wrapper;
-- 
2.17.1

