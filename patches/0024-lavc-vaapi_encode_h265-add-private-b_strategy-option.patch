From 465f0d7137a9511436bb7a48ce5cd1c66d38b48b Mon Sep 17 00:00:00 2001
From: Linjie Fu <linjie.fu@intel.com>
Date: Tue, 7 Apr 2020 14:03:21 +0800
Subject: [PATCH 19/65] lavc/vaapi_encode_h265: add private b_strategy option
 for hevc_vaapi

Allow user to choose between I/P/B frames:

- normal
    Ordinary IB..BPB..B GOP structure.
- low delay B-frames:
    IB..B GOP structure, P frames replaced by B frames, allows forward-predict
    only for all B frames, L0 == L1, required by VDENC(low_power),
    optional for VMEPAK.
- reference B-frames:
    Convert P-frames to low delay B-frames, normal B frames still have
    2 different ref_lists and allow bi-prediction.

Low delay B:
<http://what-when-how.com/Tutorial/topic-397pct9eq3/High-Efficiency-Video-Coding-HEVC-288.html>

There is an on-going work in libva and media-driver to add querys
support for low delay b, would add it once it's ready:
https://github.com/intel/libva/pull/220
https://github.com/intel/libva/pull/364
https://github.com/intel/media-driver/issues/721

Rebased a bit for this internal branch.

This patch will be removed after
https://github.com/intel/media-driver/pull/1382 is merged.

Signed-off-by: Linjie Fu <linjie.fu@intel.com>
---
 doc/encoders.texi              | 16 ++++++++++++++++
 libavcodec/vaapi_encode.c      |  3 +++
 libavcodec/vaapi_encode.h      |  1 +
 libavcodec/vaapi_encode_h265.c | 11 +++++++++++
 4 files changed, 31 insertions(+)

diff --git a/doc/encoders.texi b/doc/encoders.texi
index d265dd5a81..a5173a17f5 100644
--- a/doc/encoders.texi
+++ b/doc/encoders.texi
@@ -3721,6 +3721,22 @@ Some combination of the following values:
 Include HDR metadata if the input frames have it
 (@emph{mastering_display_colour_volume} and @emph{content_light_level}
 messages).
+
+@item b_strategy
+Allow user to choose between I/P/B frames and specify the type of B-frames.
+@table @samp
+@item normal
+Normal IBBPBB strategy.
+
+@item low_delay_b
+Convert P-frames to B-frames, only forward-predict is allowed for all B frames,
+ref_list0 equals to ref_list1, required by VDENC(low_power).
+
+@item ref_b
+Convert P-frames to low delay B-frames as references, while normal B frames
+still have 2 different ref_lists and allow bi-prediction.
+@end table
+
 @end table
 
 @item tiles
diff --git a/libavcodec/vaapi_encode.c b/libavcodec/vaapi_encode.c
index 0b84f07043..9275c5e305 100644
--- a/libavcodec/vaapi_encode.c
+++ b/libavcodec/vaapi_encode.c
@@ -1993,6 +1993,9 @@ static av_cold int vaapi_encode_init_gop_structure(AVCodecContext *avctx)
                 }
             }
         }
+
+        if (ctx->low_power && (ctx->b_frame_strategy == 1))
+            prediction_pre_only = 1;
     }
 #endif
 
diff --git a/libavcodec/vaapi_encode.h b/libavcodec/vaapi_encode.h
index 28f82a72a2..7e199af291 100644
--- a/libavcodec/vaapi_encode.h
+++ b/libavcodec/vaapi_encode.h
@@ -342,6 +342,7 @@ typedef struct VAAPIEncodeContext {
     int gop_counter;
     int end_of_stream;
     int p_to_gpb;
+    int b_frame_strategy;
     uint8_t *delta_qp;
 
     // Whether the driver supports ROI at all.
diff --git a/libavcodec/vaapi_encode_h265.c b/libavcodec/vaapi_encode_h265.c
index 456307d570..de9561a6af 100644
--- a/libavcodec/vaapi_encode_h265.c
+++ b/libavcodec/vaapi_encode_h265.c
@@ -69,6 +69,7 @@ typedef struct VAAPIEncodeH265Context {
     int tier;
     int level;
     int sei;
+    int b_frame_strategy;
 
     // Derived settings.
     int fixed_qp_idr;
@@ -1341,6 +1342,8 @@ static av_cold int vaapi_encode_h265_init(AVCodecContext *avctx)
     if (priv->qp > 0)
         ctx->explicit_qp = priv->qp;
 
+    ctx->b_frame_strategy = priv->b_frame_strategy;
+
     return ff_vaapi_encode_init(avctx);
 }
 
@@ -1416,6 +1419,14 @@ static const AVOption vaapi_encode_h265_options[] = {
       0, AV_OPT_TYPE_CONST,
       { .i64 = SEI_MASTERING_DISPLAY | SEI_CONTENT_LIGHT_LEVEL },
       INT_MIN, INT_MAX, FLAGS, "sei" },
+    { "b_strategy", "Strategy to choose between I/P/B-frames",
+      OFFSET(b_frame_strategy), AV_OPT_TYPE_INT, { .i64 = 0 }, 0, 2, FLAGS, "b_strategy" },
+        { "normal",      "Normal IB..BPB..B strategy",
+                          0, AV_OPT_TYPE_CONST, { .i64 = 0 }, INT_MIN, INT_MAX, FLAGS, "b_strategy" },
+        { "low_delay_b", "Use low delay B-frames with forward-prediction only",
+                          0, AV_OPT_TYPE_CONST, { .i64 = 1 }, INT_MIN, INT_MAX, FLAGS, "b_strategy" },
+        { "ref_b",       "Only convert P-frames to low delay B-frames as references",
+                          0, AV_OPT_TYPE_CONST, { .i64 = 2 }, INT_MIN, INT_MAX, FLAGS, "b_strategy" },
 
     { "tiles", "Tile columns x rows",
       OFFSET(common.tile_cols), AV_OPT_TYPE_IMAGE_SIZE,
-- 
2.17.1

